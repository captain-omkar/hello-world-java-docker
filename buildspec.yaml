version: 0.2


phases:
  install:
    runtime-versions:
      php: 7.3
      java: corretto11
  
    commands:
      - apt-get update
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.4.0.2170-linux.zip
      - unzip sonar-scanner-cli-4.4.0.2170-linux.zip
      - mv sonar-scanner-4.4.0.2170-linux /opt/sonar-scanner
      - chmod -R 775 /opt/sonar-scanner
      - echo "stage pre_build completed"
 
  pre_build:
    commands:
      - mvn clean install
      - echo Logging in to Amazon ECR...
      - aws --version
      - sonar-scanner -X \
         -Dsonar.projectKey=my-project \
         -Dsonar.sources=src \
         -Dsonar.host.url=http://204.236.198.2:80 \
         -Dsonar.login=24685e8524aded3a927eb1e72448aff666660a75 \
         -Dsonar.java.binaries=target/classes
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 086349442762.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=086349442762.dkr.ecr.us-east-1.amazonaws.com/loco
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"order-service","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
   - imagedefinitions.json
   - target/*.jar
